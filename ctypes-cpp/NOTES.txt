The vtable
----------

Order of virtual methods in the vtable:

It seems the methods appear in the order as they are listed in the
include file.  Overloaded virtual methods appear in reverse order from
the include file.  Sample::

	vtable offset	function prototype from include file

	0		virtual void V0();
	3		virtual void V1(int x);
	2		virtual void V1();
	1		virtual void V1(char *ptr) {};
	4		virtual void V2();

Pure virtual methods 

TODO
----

Is is possible to get the function addresses from a map file, even
when the class is NOT declared '__declspec(dllexport)'.  The code that
does this should verify the timestamp in the map file against the
timestamp in the dll's PE header.  The 'preferred load address' value
must be substracted from the 'Rva+Base' addresses, and ctypes should
load the functions based on the dll handle.
